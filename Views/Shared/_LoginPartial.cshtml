@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav ">

    @{
        var cook = SignInManager.Context.Request.Cookies.SingleOrDefault(c => c.Key == ".AspNetCore.Identity.Application");



}

    @if (SignInManager.IsSignedIn(User)) { 
    
        <li class="nav-item">
            <a id="manage" class="nav-link text-muted" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User).Split('@')[0]</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Movies", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-muted">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-muted" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-muted" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
